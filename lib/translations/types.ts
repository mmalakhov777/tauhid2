export interface TelegramTranslations {
  welcome: {
    greeting: string;
    description: string;
    howToAsk: string;
    textMessages: string;
    voiceMessages: string;
    forwardMessages: string;
    whatICanHelp: string;
    quranicVerses: string;
    islamicTeachings: string;
    hadithScholarly: string;
    prayerWorship: string;
    risaleNur: string;
    howItWorks: string;
    step1: string;
    step2: string;
    step3: string;
    completeResponse: string;
    dedicatedUI: string;
    enhancedSearch: string;
    chatHistory: string;
    accessFullService: string;
    menuButton: string;
    exampleQuestions: string;
    prayerExample: string;
    tawhidExample: string;
    pillarsExample: string;
    feelFree: string;
  };
  help: {
    title: string;
    description: string;
    sources: string;
    quranHadith: string;
    classicalScholarship: string;
    modernTeachings: string;
    risaleNurCollection: string;
    educationalContent: string;
    tipsTitle: string;
    beSpecific: string;
    oneQuestion: string;
    clearLanguage: string;
    commands: string;
    startCommand: string;
    helpCommand: string;
    blessing: string;
  };
  processing: {
    transcribing: string;
    convertingSpeech: string;
    audioTranscribed: string;
    preparingSearch: string;
    initializingSearch: string;
    searchingSources: string;
  };
  errors: {
    audioProcessError: string;
    transcriptionFailed: string;
    technicalIssue: string;
    authenticationFailed: string;
  };
  buttons: {
    fullResponse: string;
  };
  payment: {
    successful: string;
    packageLabel: string;
    priceLabel: string;
    messagesAdded: string;
    neverExpire: string;
    checkBalance: string;
    processedButFailed: string;
    validationFailed: string;
    userNotFound: string;
    processingFailed: string;
  };
  purchase: {
    title: string;
    availablePackages: string;
    starsInfo: string;
    tapButton: string;
    neverExpire: string;
    userNotFound: string;
    menuError: string;
    invalidPackage: string;
    invoiceCreationFailed: string;
    invoiceError: string;
  };
  balance: {
    title: string;
    trialMessages: string;
    paidMessages: string;
    totalAvailable: string;
    willResetSoon: string;
    isCurrent: string;
    noMessagesRemaining: string;
    userNotFound: string;
    checkError: string;
  };
  binding: {
    checking: string;
    pleaseWait: string;
    successUpgraded: string;
    successLinked: string;
    whatThisMeans: string;
    accessHistory: string;
    syncedPlatforms: string;
    premiumFeatures: string;
    preservedChats: string;
    nextSteps: string;
    continueHere: string;
    visitWebApp: string;
    fullyIntegrated: string;
    welcomeComplete: string;
    openWebApp: string;
    reBindingIssue: string;
    currentAccount: string;
    tryingToConnect: string;
    whatToTry: string;
    generateNewCode: string;
    codeNotExpired: string;
    tryAgain: string;
    ifPersists: string;
    contactSupport: string;
    historyPreserved: string;
    needHelp: string;
    alreadyLinked: string;
    existingEmail: string;
    whatYouCanDo: string;
    loginWithEmail: string;
    forgotPassword: string;
    fullAccess: string;
    invalidCode: string;
    notValidExpired: string;
    possibleReasons: string;
    codeExpired: string;
    alreadyUsed: string;
    typedIncorrectly: string;
    getNewCode: string;
    goToWebApp: string;
    clickConnect: string;
    copyCode: string;
    sendWithin: string;
    technicalError: string;
    technicalIssue: string;
    tryAgainMoments: string;
    problemPersists: string;
  };
  preCheckout: {
    invalidPaymentData: string;
    paymentValidationFailed: string;
    invalidPackageSelected: string;
    paymentAmountMismatch: string;
    paymentProcessingError: string;
  };
  callback: {
    useBuyCommand: string;
    purchaseInstruction: string;
  };
} 